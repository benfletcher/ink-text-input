{"version":3,"sources":["../src/index.js"],"names":["ARROW_UP","ARROW_DOWN","ARROW_LEFT","ARROW_RIGHT","ENTER","CTRL_C","BACKSPACE","DELETE","TextInput","PureComponent","cursorOffset","props","value","length","cursorWidth","data","originalValue","focus","showCursor","mask","onChange","onSubmit","originalCursorOffset","state","isMounted","s","String","substr","setState","render","placeholder","highlightPastedText","hasValue","renderedValue","cursorActualWidth","chalk","inverse","i","char","repeat","componentDidMount","stdin","setRawMode","on","handleInput","componentWillUnmount","removeListener","PropTypes","string","isRequired","bool","object","func","undefined","TextInputWithStdin","UncontrolledTextInput","setValue","bind"],"mappings":"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","sourcesContent":["import React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\nimport {Color, StdinContext} from 'ink';\nimport chalk from 'chalk';\n\nconst ARROW_UP = '\\u001B[A';\nconst ARROW_DOWN = '\\u001B[B';\nconst ARROW_LEFT = '\\u001B[D';\nconst ARROW_RIGHT = '\\u001B[C';\nconst ENTER = '\\r';\nconst CTRL_C = '\\x03';\nconst BACKSPACE = '\\x08';\nconst DELETE = '\\x7F';\n\nclass TextInput extends PureComponent {\n\tstatic propTypes = {\n\t\tvalue: PropTypes.string.isRequired,\n\t\tplaceholder: PropTypes.string,\n\t\tfocus: PropTypes.bool,\n\t\tmask: PropTypes.string,\n\t\thighlightPastedText: PropTypes.bool,\n\t\tshowCursor: PropTypes.bool,\n\t\tstdin: PropTypes.object.isRequired,\n\t\tsetRawMode: PropTypes.func.isRequired,\n\t\tonChange: PropTypes.func.isRequired,\n\t\tonSubmit: PropTypes.func\n\t}\n\n\tstatic defaultProps = {\n\t\tplaceholder: '',\n\t\tshowCursor: true,\n\t\tfocus: true,\n\t\tmask: undefined,\n\t\thighlightPastedText: false,\n\t\tonSubmit: undefined\n\t};\n\n\tstate = {\n\t\tcursorOffset: (this.props.value || '').length,\n\t\tcursorWidth: 0\n\t}\n\n\tisMounted = false;\n\n\trender() {\n\t\tconst {value, placeholder, showCursor, focus, mask, highlightPastedText} = this.props;\n\t\tconst {cursorOffset, cursorWidth} = this.state;\n\t\tconst hasValue = value.length > 0;\n\t\tlet renderedValue = value;\n\t\tconst cursorActualWidth = highlightPastedText ? cursorWidth : 0;\n\n\t\t// Fake mouse cursor, because it's too inconvenient to deal with actual cursor and ansi escapes\n\t\tif (showCursor && !mask && focus) {\n\t\t\trenderedValue = value.length > 0 ? '' : chalk.inverse(' ');\n\n\t\t\tlet i = 0;\n\t\t\tfor (const char of value) {\n\t\t\t\tif (i >= cursorOffset - cursorActualWidth && i <= cursorOffset) {\n\t\t\t\t\trenderedValue += chalk.inverse(char);\n\t\t\t\t} else {\n\t\t\t\t\trenderedValue += char;\n\t\t\t\t}\n\n\t\t\t\ti++;\n\t\t\t}\n\n\t\t\tif (value.length > 0 && cursorOffset === value.length) {\n\t\t\t\trenderedValue += chalk.inverse(' ');\n\t\t\t}\n\t\t}\n\n\t\tif (mask) {\n\t\t\trenderedValue = mask.repeat(renderedValue.length);\n\t\t}\n\n\t\treturn (\n\t\t\t<Color dim={!hasValue && placeholder}>\n\t\t\t\t{placeholder ? (hasValue ? renderedValue : placeholder) : renderedValue}\n\t\t\t</Color>\n\t\t);\n\t}\n\n\tcomponentDidMount() {\n\t\tconst {stdin, setRawMode} = this.props;\n\n\t\tthis.isMounted = true;\n\t\tsetRawMode(true);\n\t\tstdin.on('data', this.handleInput);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tconst {stdin, setRawMode} = this.props;\n\n\t\tthis.isMounted = false;\n\t\tstdin.removeListener('data', this.handleInput);\n\t\tsetRawMode(false);\n\t}\n\n\thandleInput = data => {\n\t\tconst {value: originalValue, focus, showCursor, mask, onChange, onSubmit} = this.props;\n\t\tconst {cursorOffset: originalCursorOffset} = this.state;\n\n\t\tif (focus === false || this.isMounted === false) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst s = String(data);\n\n\t\tif (s === ARROW_UP || s === ARROW_DOWN || s === CTRL_C) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (s === ENTER) {\n\t\t\tif (onSubmit) {\n\t\t\t\tonSubmit(originalValue);\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tlet cursorOffset = originalCursorOffset;\n\t\tlet value = originalValue;\n\t\tlet cursorWidth = 0;\n\n\t\tif (s === ARROW_LEFT) {\n\t\t\tif (showCursor && !mask) {\n\t\t\t\tcursorOffset--;\n\t\t\t}\n\t\t} else if (s === ARROW_RIGHT) {\n\t\t\tif (showCursor && !mask) {\n\t\t\t\tcursorOffset++;\n\t\t\t}\n\t\t} else if (s === BACKSPACE || s === DELETE) {\n\t\t\tvalue = value.substr(0, cursorOffset - 1) + value.substr(cursorOffset, value.length);\n\t\t\tcursorOffset--;\n\t\t} else {\n\t\t\tvalue = value.substr(0, cursorOffset) + s + value.substr(cursorOffset, value.length);\n\t\t\tcursorOffset += s.length;\n\n\t\t\tif (s.length > 1) {\n\t\t\t\tcursorWidth = s.length;\n\t\t\t}\n\t\t}\n\n\t\tif (cursorOffset < 0) {\n\t\t\tcursorOffset = 0;\n\t\t}\n\n\t\tif (cursorOffset > value.length) {\n\t\t\tcursorOffset = value.length;\n\t\t}\n\n\t\tthis.setState({cursorOffset, cursorWidth});\n\n\t\tif (value !== originalValue) {\n\t\t\tonChange(value);\n\t\t}\n\t}\n}\n\nexport default class TextInputWithStdin extends PureComponent {\n\trender() {\n\t\treturn (\n\t\t\t<StdinContext.Consumer>\n\t\t\t\t{({stdin, setRawMode}) => (\n\t\t\t\t\t<TextInput {...this.props} stdin={stdin} setRawMode={setRawMode}/>\n\t\t\t\t)}\n\t\t\t</StdinContext.Consumer>\n\t\t);\n\t}\n}\n\nexport class UncontrolledTextInput extends PureComponent {\n\tstate = {\n\t\tvalue: ''\n\t}\n\n\tsetValue(value) {\n\t\tthis.setState({value});\n\t}\n\n\tsetValue = this.setValue.bind(this);\n\n\trender() {\n\t\treturn <TextInputWithStdin {...this.props} value={this.state.value} onChange={this.setValue}/>;\n\t}\n}\n"],"file":"index.js"}